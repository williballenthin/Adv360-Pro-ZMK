#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>


#define HYP(key)  LS(LC(LA(LG(key))))
#define HYPER     LS(LC(LA(LGUI)))
#define SCRNSHOT  LS(LC(LA(S)))
#define EXPOSE    LG(TAB)
#define WKS_LEFT  LC(LG(LEFT))
#define WKS_RIGHT LC(LG(RIGHT))

#define L_BASE 0
#define L_KP   1
#define L_FN   2
#define L_MOD  3
#define L_NONE 4
#define L_NAV  5
#define L_PROG 6

#define AS(keycode) &as LS(keycode) keycode     // autoshift, references behavior `as`

// caps word: whats part of the word beyond alphabetic?
&caps_word {
	continue-list = <UNDERSCORE MINUS>;
};

/ {

  behaviors {
    #include "macros.dtsi"

    as: auto_shift {
      compatible = "zmk,behavior-hold-tap";
      label = "AUTO_SHIFT";
      #binding-cells = <2>;
      tapping_term_ms = <135>;
      quick_tap_ms = <0>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    // index: 0 L_BASE
    default_layer {
      bindings = <
        AS(EQUAL)     AS(N1)    AS(N2)       AS(N3)        AS(N4)        AS(N5) &tog L_KP                                                                                        &mo L_MOD   AS(N6) AS(N7) AS(N8)    AS(N9)   AS(N0)   AS(MINUS)
        &kp TAB       &kp Q     &kp W        &kp E         &kp R         &kp T  &kp A                                                                                            &kp B       &kp Y  &kp U  &kp I     &kp O    &kp P    &kp BSLH
        &lt L_NAV ESC &kp A     &kp S        &kp D         &kp F         &kp G  &kp LC(LS(TAB))          &kp LCTRL   &kp EXPOSE              &kp LGUI        &kp RALT            &kp LC(TAB) &kp H  &kp J  &kp K     &kp L    &kp SEMI &kp SQT
        &kp LSHFT     &kp Z     &kp X        &kp C         &kp V         &kp B                  &none    &none       &kp ESC     &none &none &kp PG_UP       &none     &none                 &kp N  &kp M  &kp COMMA &kp DOT  &kp FSLH &kp RSHFT
        &kp LCTRL     AS(GRAVE) &kp WKS_LEFT &kp WKS_RIGHT &kp LC(GRAVE)                        &kp BSPC &kp DEL     &kp LA(TAB)             &lt L_NAV PG_DN &kp ENTER &kp SPACE                    &kp UP &kp DOWN  &kp LBKT &kp RBKT &mo L_FN
      >;
    };

    // keypad layer from Kinesis
    // index: 1 L_KP
    keypad {
      bindings = <
        &kp EQUAL &kp N1    &kp N2   &kp N3   &kp N4     &kp N5 &trans                                                                       &mo L_MOD &kp N6 &kp KP_NUM &kp KP_EQUAL &kp KP_DIVIDE &kp KP_MULTIPLY &kp MINUS
        &kp TAB   &kp Q     &kp W    &kp E    &kp R      &kp T  &none                                                                        &none     &kp Y  &kp KP_N7  &kp KP_N8    &kp KP_N9     &kp KP_MINUS    &kp BSLH
        &kp ESC   &kp A     &kp S    &kp D    &kp F      &kp G  &none              &kp LCTRL &kp LALT             &kp LGUI  &kp RCTRL        &none     &kp H  &kp KP_N4  &kp KP_N5    &kp KP_N6     &kp KP_PLUS     &kp SQT
        &kp LSHFT &kp Z     &kp X    &kp C    &kp V      &kp B            &none    &none     &kp HOME &none &none &kp PG_UP &none     &none            &kp N  &kp KP_N1  &kp KP_N2    &kp KP_N3     &kp KP_ENTER    &kp RSHFT
        &mo L_FN  &kp GRAVE &kp CAPS &kp LEFT &kp RIGHT                   &kp BSPC &kp DEL   &kp END              &kp PG_DN &kp ENTER &kp KP_N0               &kp UP     &kp DOWN     &kp KP_DOT    &kp RBKT        &mo L_FN
      >;
    };

    // fn layer from Kinesis
    // index: 2 L_FN
    fn {
      bindings = <
        &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &tog L_KP                                                    &mo L_MOD &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12
        &trans &trans &trans &trans &trans &trans &none                                                        &none     &trans &trans &trans &trans  &trans  &trans
        &trans &trans &trans &trans &trans &trans &none         &trans &trans             &trans &trans        &none     &trans &trans &trans &trans  &trans  &trans
        &trans &trans &trans &trans &trans &trans        &none  &none  &trans &none &none &trans &none  &none            &trans &trans &trans &trans  &trans  &trans
        &trans &trans &trans &trans &trans               &trans &trans &trans             &trans &trans &trans                  &trans &trans &trans  &trans  &trans
      >;
    };

    // mod layer from Kinesis
    // index: 3 L_MOD
    mod {
      bindings = <
        &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none                                                                                                          &trans                 &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none
        &none &none        &none        &none        &none        &none        &bootloader                                                                                                    &bootloader            &none        &none        &none        &none        &none        &none
        &none &none        &none        &none        &none        &none        &rgb_ug RGB_MEFS_CMD 5                 &bt BT_CLR &bt BT_CLR             &bt BT_CLR &bt BT_CLR                 &rgb_ug RGB_MEFS_CMD 5 &none        &none        &none        &none        &none        &none
        &none &none        &none        &none        &none        &none                               &none           &none      &none      &none &none &none      &none      &none                                  &none        &none        &none        &none        &none        &none
        &none &none        &none        &bl BL_INC   &bl BL_DEC                                       &rgb_ug RGB_TOG &bl BL_TOG &none                  &none      &bl BL_TOG &rgb_ug RGB_TOG                                     &bl BL_INC   &bl BL_DEC   &none        &none        &none
      >;
    };

    // template layer by willi
    // index: 4 L_NONE
    none {
      bindings = <
        &none &none &none &none &none &none &none                                                       &none &none &none &none &none &none &none
        &none &none &none &none &none &none &none                                                       &none &none &none &none &none &none &none
        &none &none &none &none &none &none &none          &none &none             &none &none          &none &none &none &none &none &none &none
        &none &none &none &none &none &none          &none &none &none &none &none &none &none &none          &none &none &none &none &none &none
        &none &none &none &none &none                &none &none &none             &none &none &none                &none &none &none &none &none
      >;
    };
 
    // vim-like nav layer by willi
    // invoked via &lt from default
    // index: 5 L_NAV
    nav {
      bindings = <
        &none &none &none &none &kp END   &none     &none                                                        &none &kp HOME &none    &none  &none     &none &none
        &none &none &none &none &none     &none     &none                                                        &none &none    &none    &none  &none     &none &none
        &none &none &none &none &kp PG_DN &none     &none           &none &none             &none &none          &none &kp LEFT &kp DOWN &kp UP &kp RIGHT &none &none
        &none &none &none &none &none     &kp PG_UP       &none &none &none &none &none &none &none &none          &none    &none    &none  &none     &none &none
        &none &none &none &none &none                     &none &none &none             &none &none &none                   &none    &none  &none     &none &none 
      >;
    };         
    // programming helper layer by willi
    // invoked via &lt from default
    // index: 6 L_PROG
    nav {
      bindings = <                                                                                                                               
        &none &none &none &none &none &none &none                                                       &none &none     &none    &none    &none &none &none
        &none &none &none &none &none &none &none                                                       &none &none     &kp LBRC &kp RBRC &none &none &none
        &none &none &none &none &none &none &none          &none &none             &none &none          &none &kp UNDER &kp LPAR &kp RPAR &none &none &none
        &none &none &none &none &none &none          &none &none &none &none &none &none &none &none          &none     &kp LBKT &kp RBKT &none &none &none
        &none &none &none &none &none                &none &none &none             &none &none &none                    &none    &none    &none &none &none
      >;
    };
  };
};
